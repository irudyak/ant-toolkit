<project name="Scope test" default="property-test" basedir=".">

	<import><javaresource name="com/anttoolkit/anttoolkit.xml"/></import>

	<generalScopePropertyHandler/>

	<target name="property-test">
		<property name="AAA" value="000"/>

		<echo>--- START LEVEL 0 ---</echo>
		<echo>AAA=${AAA}</echo>

		<generalScope>
			<echo>--- START LEVEL 1 ---</echo>
			<echo>AAA=${AAA}</echo>

			<property name="AAA" value="111"/>
			<echo>MODIFIED: AAA=${AAA}</echo>

			<generalScope>
				<echo>--- START LEVEL 2 ---</echo>
				<echo>AAA=${AAA}</echo>

				<property name="AAA" value="222"/>
				<echo>MODIFIED: AAA=${AAA}</echo>

				<echo>parent:AAA=${parent:AAA}</echo>
				<echo>parent:parent:AAA=${parent:parent:AAA}</echo>

				<generalScope>
					<echo>--- START LEVEL 3 ---</echo>
					<echo>AAA=${AAA}</echo>

					<property name="AAA" value="333"/>
					<echo>MODIFIED: AAA=${AAA}</echo>

					<echo>parent:AAA=${parent:AAA}</echo>
					<echo>parent:parent:AAA=${parent:parent:AAA}</echo>
					<echo>parent:parent:parent:AAA=${parent:parent:parent:AAA}</echo>

					<generalProperty name="parent:AAA" value="${parent:AAA}-MOD"/>
					<generalProperty name="parent:parent:AAA" value="${parent:parent:AAA}-MOD"/>
					<generalProperty name="parent:parent:parent:AAA" value="${parent:parent:parent:AAA}-MOD"/>

					<echo>MODIFIED: parent:AAA=${parent:AAA}</echo>
					<echo>MODIFIED: parent:parent:AAA=${parent:parent:AAA}</echo>
					<echo>MODIFIED: parent:parent:parent:AAA=${parent:parent:parent:AAA}</echo>

					<echo>--- END LEVEL 3 ---</echo>
				</generalScope>

				<echo>AAA=${AAA}</echo>

				<echo>--- END LEVEL 2 ---</echo>
			</generalScope>

			<echo>AAA=${AAA}</echo>
			<echo>--- END LEVEL 1 ---</echo>
		</generalScope>

		<echo>AAA=${AAA}</echo>

		<echo>--- END LEVEL 0 ---</echo>

	</target>

	<target name="array-test">
		<property name="value" value="XXX"/>
		<property name="arrayString" value="YYY"/>

		<generalInitArray name="AAA" values="1,2,3,4,5"/>
		<printArray array="AAA"/>

		<generalScope>
			<property name="value" value="XXX"/>
			<property name="arrayString" value="YYY"/>

			<generalInitArray name="AAA" values="11,22,33,44,55"/>
			<printArray array="AAA"/>

			<generalScope>
				<property name="value" value="XXX"/>
				<property name="arrayString" value="YYY"/>

				<generalInitArray name="AAA" values="111,222,333,444,555"/>
				<printArray array="AAA"/>

				<generalScope>
					<property name="value" value="XXX"/>
					<property name="arrayString" value="YYY"/>

					<generalInitArray name="AAA" values="1111,2222,3333,4444,5555"/>
					<printArray array="AAA"/>
				</generalScope>

				<printArray array="AAA"/>
			</generalScope>

			<printArray array="AAA"/>
		</generalScope>

		<printArray array="AAA"/>

	</target>

	<target name="map-test">
		<generalInitMap name="AAA">
			<entry key="a" value="1"/>
			<entry key="b" value="2"/>
			<entry key="c" value="3"/>
		</generalInitMap>
		<printMap map="AAA"/>

		<generalScope>
			<generalInitMap name="AAA">
				<entry key="aa" value="11"/>
				<entry key="bb" value="22"/>
				<entry key="cc" value="33"/>
			</generalInitMap>
			<printMap map="AAA"/>

			<generalScope>
				<generalInitMap name="AAA">
					<entry key="aaa" value="111"/>
					<entry key="bbb" value="222"/>
					<entry key="ccc" value="333"/>
				</generalInitMap>
				<printMap map="AAA"/>

				<generalScope>
					<generalInitMap name="AAA">
						<entry key="aaaa" value="1111"/>
						<entry key="bbbb" value="2222"/>
						<entry key="cccc" value="3333"/>
					</generalInitMap>
					<printMap map="AAA"/>
				</generalScope>

				<printMap map="AAA"/>
			</generalScope>

			<printMap map="AAA"/>
		</generalScope>

		<printMap map="AAA"/>
	</target>

	<target name="thread-test1">
		<property name="threadsNumber" value="5"/>
	    <property name="threadLoopIterations" value="10"/>
	    <property name="threadMinSleep" value="0"/>
	    <property name="threadMaxSleep" value="5"/>
		<property name="threadsLogDir" value="${basedir}\thread-test"/>
		<property name="THREAD-AWARE-LOGGER.UNREGISTERED-THREADS-LOG-FOLDER" value="thread-test"/>

		<delete dir="${basedir}/thread-test" includeemptydirs="true" />
		<mkdir dir="${basedir}/thread-test"/>

		<property name="AAA" value="a"/>
		<generalInitArray name="AAA" values="a,b,c,d,e"/>
		<generalInitMap name="AAA">
			<entry key="a" value="a"/>
			<entry key="b" value="b"/>
			<entry key="c" value="c"/>
		</generalInitMap>

		<echo>Before threads started</echo>

		<printThreadVariables property="AAA" array="AAA" map="AAA"/>

		<echo>Starting threads</echo>

<!-- ##################### -->

		<generalCreateCyclicBarrier name="cyclicBarrier" parties="${threadsNumber}"/>

        <generalForLoop from="1" to="${threadsNumber}" iterationProperty="iteration">

            <generalStartThread name="${iteration}" group="threadsGroup" logFile="${threadsLogDir}\thread-${iteration}.log">

				<generalGetThreadInfo nameProperty="threadName"/>

				<generalWaitCyclicBarrier name="cyclicBarrier"/>

				<property name="AAA" value="${threadName}"/>
				<generalInitArray name="AAA" values="${threadName}-a,${threadName}-b,${threadName}-c,${threadName}-d,${threadName}-e"/>
				<generalInitMap name="AAA">
					<entry key="${threadName}-a" value="${threadName}-a"/>
					<entry key="${threadName}-b" value="${threadName}-b"/>
					<entry key="${threadName}-c" value="${threadName}-c"/>
				</generalInitMap>

				<printThreadVariables property="AAA" array="AAA" map="AAA"/>

                <generalForLoop from="1" to="${threadLoopIterations}" iterationProperty="iteration">

					<generalWaitCyclicBarrier name="cyclicBarrier"/>

					<generalProperty name="AAA" value="${threadName}-${iteration}"/>
					<generalAddArrayElement array="AAA" value="${threadName}-${iteration}"/>
					<generalPutMapElement map="AAA" key="${threadName}-${iteration}" value="${threadName}-${iteration}"/>

					<printThreadVariables property="AAA" array="AAA" map="AAA"/>

                    <generalGenerateRandomInteger min="${threadMinSleep}" max="${threadMaxSleep}" property="sleepTimeout"/>

                    <echo>Sleeping for ${sleepTimeout}ms</echo>

                    <sleep milliseconds="${sleepTimeout}"/>
                </generalForLoop>

            </generalStartThread>

        </generalForLoop>

        <echo>Waiting for threads to complete...</echo>
        <generalWaitThread group="threadsGroup" failonany="true"/>

		<echo>AAA=${AAA}</echo>
		<printArray array="AAA"/>
		<printMap map="AAA"/>

	</target>

	<target name="thread-test2">
		<property name="threadsNumber" value="5"/>
	    <property name="threadLoopIterations" value="10"/>
	    <property name="threadMinSleep" value="0"/>
	    <property name="threadMaxSleep" value="5"/>
		<property name="threadsLogDir" value="${basedir}\thread-test"/>
		<property name="THREAD-AWARE-LOGGER.UNREGISTERED-THREADS-LOG-FOLDER" value="thread-test"/>

		<delete dir="${basedir}/thread-test" includeemptydirs="true" />
		<mkdir dir="${basedir}/thread-test"/>

		<property name="AAA" value="a"/>
		<generalInitArray name="AAA" values="a,b,c,d,e"/>
		<generalInitMap name="AAA">
			<entry key="a" value="a"/>
			<entry key="b" value="b"/>
			<entry key="c" value="c"/>
		</generalInitMap>

		<echo>Before threads started</echo>

		<printThreadVariables property="AAA" array="AAA" map="AAA"/>

		<echo>Starting threads</echo>

<!-- ##################### -->

		<generalCreateCyclicBarrier name="cyclicBarrier" parties="${threadsNumber}"/>

        <generalForLoop from="1" to="${threadsNumber}" iterationProperty="iteration">

            <generalStartThread name="${iteration}" group="threadsGroup" logFile="${threadsLogDir}\thread-${iteration}.log">

				<generalGetThreadInfo nameProperty="threadName"/>

				<generalWaitCyclicBarrier name="cyclicBarrier"/>

				<printThreadVariables property="AAA" array="AAA" map="AAA"/>

                <generalForLoop from="1" to="${threadLoopIterations}" iterationProperty="iteration">

					<generalWaitCyclicBarrier name="cyclicBarrier"/>

					<generalProperty name="AAA" value="${threadName}-${iteration}"/>
					<generalAddArrayElement array="AAA" value="${threadName}-${iteration}"/>
					<generalPutMapElement map="AAA" key="${threadName}-${iteration}" value="${threadName}-${iteration}"/>

					<printThreadVariables property="AAA" array="AAA" map="AAA"/>

                    <generalGenerateRandomInteger min="${threadMinSleep}" max="${threadMaxSleep}" property="sleepTimeout"/>

                    <echo>Sleeping for ${sleepTimeout}ms</echo>

                    <sleep milliseconds="${sleepTimeout}"/>
                </generalForLoop>

            </generalStartThread>

        </generalForLoop>

        <echo>Waiting for threads to complete...</echo>
        <generalWaitThread group="threadsGroup" failonany="true"/>

		<echo>AAA=${AAA}</echo>
		<printArray array="AAA"/>
		<printMap map="AAA"/>

	</target>

<!-- MACRODEFS -->

	<macrodef name="printArray">
		<attribute name="array"/>

		<sequential>
			<generalScope>
				<generalProperty name="arrayString" value=""/>

				<generalArrayLoop array="@{array}" elementProperty="value">
					<generalIf arg1="${arrayString}" condition="!=" arg2="">
						<generalProperty name="arrayString" value="${arrayString},"/>
					</generalIf>

					<generalProperty name="arrayString" value="${arrayString}${value}"/>
				</generalArrayLoop>

				<echo>${arrayString}</echo>
			</generalScope>
		</sequential>
	</macrodef>

	<macrodef name="printMap">
		<attribute name="map"/>
		<sequential>
			<generalScope>
				<generalProperty name="mapString" value=""/>

				<generalMapLoop map="@{map}" keyProperty="key" valueProperty="value">
					<generalIf arg1="${mapString}" condition="!=" arg2="">
						<generalProperty name="mapString" value="${mapString};"/>
					</generalIf>

					<generalProperty name="mapString" value="${mapString}[${key},${value}]"/>
				</generalMapLoop>

				<echo>${mapString}</echo>
			</generalScope>
		</sequential>
	</macrodef>

	<macrodef name="printThreadVariables">
		<attribute name="property"/>
		<attribute name="array"/>
		<attribute name="map"/>

		<sequential>
			<echo>@{property}=${@{property}}</echo>
			<printArray array="@{array}"/>
			<printMap map="@{map}"/>
		</sequential>
	</macrodef>
</project>