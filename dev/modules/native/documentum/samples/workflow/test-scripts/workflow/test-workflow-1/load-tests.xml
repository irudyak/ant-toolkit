<?xml version="1.0" encoding="UTF-8"?>
<project name="Load tests" basedir="" default="runLoadTests">

	<!-- Importing smoke tests defenitions, so that they could be used for load testing -->
	<import file="smoke-tests.xml"/>

<!-- ***** Load test parameters ****** -->

	<!-- Number of threads (the same like number concurrent user sessions) -->
	<property name="threadsCount" value="10"/>

	<!-- Number of iteration -->
	<property name="iterationsCount" value="10"/>

<!-- ***** TARGET TO EXECUTE LOAD TESTS ******** -->

    <target name="runLoadTests">
		<!-- Creating cyclic barrier synchronization primitive.
			It will be used to start all created threads simultaneously to simulate explosive load -->
		<general.createCyclicBarrier name="BARRIER" parties="${threadsCount}"/>

		<echo>Creating worker ${threadsCount} threads...</echo>

		<!-- Creating threads in a cycle -->
		<general.for from="1" to="${threadsCount}" iterationProperty="iteration">

			<!-- Creating and starting new thread -->
			<general.startThread name="thread-${iteration}" group="WORKER-THREADS" logFile="${DEPLOYMENT_LOGS_DIR}\thread-${iteration}.log">

				<!-- Getting thread name into thread local property "threadName" -->
				<general.getThreadInfo nameProperty="threadName" />

				<!-- Waiting for cyclic barrier to start all test simultaneously to imitate explosive load -->
				<general.waitCyclicBarrier name="BARRIER"/>

				<!-- Start cycle inside worker thread -->
				<general.for from="1" to="${iterationsCount}" iterationProperty="iteration">
					<!-- Getting random test case target-->
					<general.getRandomArrayElement array="TEST-CASES" valueProperty="target"/>

					<echo>[ITERATION-${iteration}]</echo>

					<!-- Executing test case-->
					<executeTestCase testCase="${target}" threadPrefix="[${threadName}:${iteration}] "/>
				</general.for>

			</general.startThread>

		</general.for>

		<echo>All worker threads were created</echo>

		<echo>Waiting for worker threads to complete...</echo>
		<general.waitThread group="WORKER-THREADS" failonany="true"/>

		<echo>All worker threads completed</echo>

		<!-- Printing summary results -->
		<printSummaryResults/>

    </target>

</project>
