<?xml version="1.0" encoding="UTF-8"?>
<project basedir=".">

	<generalInitMap name="clientCapabilityMap">
		<entry key="Consumer" value="0"/>
		<entry key="Contributor" value="2"/>
		<entry key="Coordinator" value="4"/>
		<entry key="System Administrator" value="8"/>
	</generalInitMap>

	<generalInitMap name="privilegesMap">
		<entry key="None" value="0"/>
		<entry key="Create Type" value="1"/>
		<entry key="Create Cabinet" value="2"/>
		<entry key="Create Group" value="4"/>
		<entry key="System Administrator" value="8"/>
		<entry key="Superuser" value="16"/>
	</generalInitMap>

	<macrodef name="processUsersFile">
		<attribute name="file"/>

		<sequential>

			<echo>Start processing file @{file} </echo>

			<generalInitArray name="fileArray" file="@{file}"
							  separator="\r\n" trimValues="true"
							  removeEmptyValues="true" sizeProperty="fileArray.length"/>

			<generalIf arg1="${fileArray.length}" condition="=" arg2="0">
				<echo>File @{file} is empty nothing to process</echo>
			</generalIf>

			<generalIf arg1="${fileArray.length}" condition="!=" arg2="0">

				<generalArrayLoop array="fileArray" elementProperty="value" indexProperty="index">

					<generalInitArray name="usersArray" values="${value}"
									  separator=";" trimValues="true"
									  sizeProperty="usersArray.length"/>

					<generalIf arg1="${usersArray.length}" condition="!=" arg2="10">
						<echo>Omitting string ${index} - incorrect format</echo>
					</generalIf>

					<generalIf arg1="${usersArray.length}" condition="=" arg2="10">
						<echo>Start processing string ${index}</echo>

						<generalGetArrayElement array="usersArray" index="0" property="userName"/>
						<generalGetArrayElement array="usersArray" index="1" property="userLogin"/>
						<generalGetArrayElement array="usersArray" index="2" property="defaultGroup"/>
						<generalGetArrayElement array="usersArray" index="3" property="userRoles"/>
						<generalGetArrayElement array="usersArray" index="4" property="clientCapability"/>
						<generalGetArrayElement array="usersArray" index="5" property="privileges"/>
						<generalGetArrayElement array="usersArray" index="6" property="defaultFolder"/>
						<generalGetArrayElement array="usersArray" index="8" property="password"/>
						<generalGetArrayElement array="usersArray" index="9" property="email"/>

						<createUserIfNotExist userName="${userName}" userLogin="${userLogin}"
											  defaultGroup="${defaultGroup}" userRoles="${userRoles}"
											  defaultFolder="${defaultFolder}" clientCapability="${clientCapability}"
											  privileges="${privileges}" email="${email}" password="${password}"/>

						<echo>Finished processing string ${index}</echo>
					</generalIf>

				</generalArrayLoop>

			</generalIf>

			<echo>Finished processing file @{file} </echo>

		</sequential>
	</macrodef>

	<macrodef name="createGroupsIfNotExist">
		<attribute name="groupsNames"/>
		<attribute name="groupClass"/>

		<sequential>
			<generalInitArray name="__groups_names__" values="@{groupsNames}"
							  separator="," trimValues="true" removeEmptyValues="true"/>

			<generalArrayLoop array="__groups_names__" elementProperty="__groupName__">

				<dm.dqlExist property="groupExist">
					select r_object_id from dm_group where group_name='${__groupName__}'
				</dm.dqlExist>

				<generalIf arg1="${groupExist}" condition="!=" arg2="true">
					<dm.dqlExist property="userExist">
						select r_object_id from dm_user
						where user_name='${__groupName__}' or user_login_name='${__groupName__}'
					</dm.dqlExist>

					<generalIf arg1="${userExist}" condition="=" arg2="true">
						<fail message="WARNING: Can't create group ${__groupName__} because there is already dm_user object with such user_name or user_login_name!!!"/>
					</generalIf>

					<generalIf arg1="${userExist}" condition="!=" arg2="true">
						<echo>Creating group: ${__groupName__}</echo>

						<dm.docbaseObject type="dm_group">
							<property name="group_name" value="${__groupName__}"/>
							<property name="group_class" value="@{groupClass}"/>
						</dm.docbaseObject>
					</generalIf>
				</generalIf>

			</generalArrayLoop>
		</sequential>

	</macrodef>

	<macrodef name="addUserToGroups">
		<attribute name="userName"/>
		<attribute name="groups"/>

		<sequential>
			<generalInitArray name="__groups_names__" values="@{groups}"
							  separator="," trimValues="true" removeEmptyValues="true"/>

			<generalArrayLoop array="__groups_names__" elementProperty="__groupName__">
				<dm.dqlExist property="contains">
					select r_object_id from dm_group where group_name='${__groupName__}' and any i_all_users_names='@{userName}'
				</dm.dqlExist>

				<echo>
					select r_object_id from dm_group where group_name='${__groupName__}' and any i_all_users_names='@{userName}'
				</echo>

				<generalIf arg1="${contains}" condition="!=" arg2="true">
					<echo>Adding user @{userName} to group ${__groupName__}</echo>
					<dm.dql>
						alter group '${__groupName__}' add '@{userName}'
					</dm.dql>
				</generalIf>
			</generalArrayLoop>
		</sequential>
	</macrodef>

	<macrodef name="createUserIfNotExist">
		<attribute name="userName"/>
		<attribute name="userLogin"/>
		<attribute name="defaultGroup"/>
		<attribute name="userRoles"/>
		<attribute name="defaultFolder"/>
		<attribute name="clientCapability"/>
		<attribute name="privileges"/>
		<attribute name="email"/>
		<attribute name="password"/>

		<sequential>
			<createGroupsIfNotExist groupsNames="@{defaultGroup}" groupClass="group"/>
			<createGroupsIfNotExist groupsNames="@{userRoles}" groupClass="role"/>

			<dm.dqlExist property="userNameExist">
				select r_object_id from dm_user where user_name='@{userName}'
			</dm.dqlExist>

			<dm.dqlExist property="userLoginNameExist">
				select r_object_id from dm_user where user_login_name='@{userLogin}'
			</dm.dqlExist>

			<generalProperty name="actualUserName" value="@{userName}"/>

			<generalIf arg1="${userLoginNameExist}" condition="==" arg2="true">
				<dm.dqlSetProperty property="actualUserName">
					select user_name
					from dm_user
					where user_login_name='@{userLogin}'
				</dm.dqlSetProperty>
			</generalIf>

			<generalIf arg1="${userNameExist}${userLoginNameExist}" condition="=" arg2="falsefalse">
				<echo>Creating user @{userName}</echo>

				<generalGetMapElement map="clientCapabilityMap" key="@{clientCapability}" property="capability"/>

				<generalGetMapElement map="privilegesMap" key="@{privileges}" property="privileges"/>

				<dm.dql>
					create dm_user object
					set user_name='@{userName}',
					set user_login_name='@{userLogin}',
					set user_group_name='@{defaultGroup}',
					set default_folder='@{defaultFolder}',
					set client_capability=${capability},
					set user_privileges=${privileges},
					set user_address='@{email}',
					set user_source='inline password',
					set user_password='@{password}'
				</dm.dql>
			</generalIf>

			<addUserToGroups userName="${actualUserName}" groups="@{defaultGroup}"/>
			<addUserToGroups userName="${actualUserName}" groups="@{userRoles}"/>
		</sequential>
	</macrodef>


</project>