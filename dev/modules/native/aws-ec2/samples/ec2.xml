<project name="AWS test" default="test13" basedir=".">

	<import><javaresource name="com/anttoolkit/anttoolkit.xml"/></import>

	<property file="credential.properties"/>

	<aws.config id="myAwsConfig"
				accessKeyId="${accessKeyId}"
				secretAccessKey="${secretAccessKey}"
				region="us-west-1"
				availabilityZone="us-west-1c">
		<property name="maxConnections" value="5"/>
		<property name="usegzip" value="true"/>
	</aws.config>

	<target name="test1">
		<aws.ec2.runInstances awsConfig="myAwsConfig"
							  imageId="ami-6bcfc42e"
							  instanceType="t2.micro"
							  keyName="${keyName}"
							  instanceIdProperty="instId"
							  publicIpProperty="instPublicIp"
							  privateIpProperty="instPrivateIp"
							  publicDnsProperty="instPublicDns"
							  privateDnsProperty="instPrivateDns">
			<securityGroup>launch-wizard-1</securityGroup>
		</aws.ec2.runInstances>

		<echo>ID: ${instId}</echo>
		<echo>Public IP: ${instPublicIp}</echo>
		<echo>Private IP: ${instPrivateIp}</echo>
		<echo>Public DNS: ${instPublicDns}</echo>
		<echo>Private DNS: ${instPrivateDns}</echo>
	</target>

	<target name="test2">
		<aws.ec2.stopInstances awsConfig="myAwsConfig" instanceIds="i-778691b5, i-80968142"/>
	</target>

	<target name="test3">
		<aws.ec2.startInstances awsConfig="myAwsConfig" instanceIds="i-778691b5, i-80968142"/>
	</target>

	<target name="test4">
		<aws.ec2.rebootInstances awsConfig="myAwsConfig" instanceIds="i-778691b5, i-80968142"/>
	</target>

	<target name="test5">
		<aws.ec2.terminateInstances awsConfig="myAwsConfig" instanceIds="i-778691b5, i-80968142"/>
	</target>

	<target name="test6">
		<aws.ec2.waitInstances awsConfig="myAwsConfig" state="terminated" instanceIds="i-778691b5, i-80968142"/>
	</target>

	<target name="test7">
		<aws.ec2.describeInstance awsConfig="myAwsConfig" instanceId="i-69c0d7ab"
								  stateProperty="state"
								  ownerIdProperty="ownerId"
								  architectureProperty="architecture"
								  hypervisorProperty="hypervisor"
								  imageIdProperty="imageId"
								  typeProperty="type"
								  keyNameProperty="keyName"
								  privateDnsProperty="privateDns"
								  privateIpProperty="privateIp"
								  publicDnsProperty="publicDns"
								  publicIpProperty="publicIp"/>

		<echo>state: ${state}</echo>
		<echo>ownerId: ${ownerId}</echo>
		<echo>architecture: ${architecture}</echo>
		<echo>hypervisor: ${hypervisor}</echo>
		<echo>imageId: ${imageId}</echo>
		<echo>type: ${type}</echo>
		<echo>keyName: ${keyName}</echo>
		<echo>privateDns: ${privateDns}</echo>
		<echo>privateIp: ${privateIp}</echo>
		<echo>publicDns: ${publicDns}</echo>
		<echo>publicIp: ${publicIp}</echo>

	</target>

	<target name="test8">
		<aws.ec2.instancesLoop awsConfig="myAwsConfig"
								  instanceIdProperty="id"
								  stateProperty="state"
								  ownerIdProperty="ownerId"
								  architectureProperty="architecture"
								  hypervisorProperty="hypervisor"
								  imageIdProperty="imageId"
								  typeProperty="type"
								  keyNameProperty="keyName"
								  privateDnsProperty="privateDns"
								  privateIpProperty="privateIp"
								  publicDnsProperty="publicDns"
								  publicIpProperty="publicIp">

			<echo>${ownerId}, ${state}, ${architecture}, ${hypervisor}, ${imageId}, ${type}, ${privateDns}, ${privateIp}, ${publicDns}, ${publicIp}</echo>

		</aws.ec2.instancesLoop>

	</target>

	<target name="test9">
		<aws.ec2.createTags awsConfig="myAwsConfig" resources="i-778691b5, i-80968142">
			<tag key="name" value="HELLO_WORLD"/>
			<tag key="description" value="TEST"/>
		</aws.ec2.createTags>
	</target>

	<target name="test10">
		<aws.ec2.deleteTags awsConfig="myAwsConfig" resources="i-778691b5, i-80968142">
			<tag key="name"/>
			<tag key="description" value="TEST"/>
		</aws.ec2.deleteTags>
	</target>


	<target name="test11">
		<general.initArray name="ids"/>
		<general.initArray name="types"/>
		<general.initArray name="keys"/>
		<general.initArray name="vals"/>

		<aws.ec2.describeTags awsConfig="myAwsConfig"
							  filters="Name=resource-id,Values=i-778691b5,i-80968142 Name=resource-type,Values=instance"
							  resourceIdArray="ids"
							  resourceTypeArray="types"
							  keysArray="keys"
							  valuesArray="vals"/>
	</target>

	<target name="test12">
		<aws.ec2.createSecurityGroup awsConfig="myAwsConfig"
									 name="my_test"
									 vpcId="vpc-71d62d14"
									 description="TEST"
									 groupIdProperty="id">
			<authorize>
				<inbound ipProtocol="-1" cidrIp="74.11.192.96/27"/>
				<inbound ipProtocol="tcp" fromPort="22" toPort="22" cidrIp="0.0.0.0/0"/>
				<inbound ipProtocol="tcp" fromPort="80" toPort="80" cidrIp="0.0.0.0/0"/>
			</authorize>
		</aws.ec2.createSecurityGroup>

		<echo>Group Id: ${id}</echo>
	</target>

	<target name="test13">
		<aws.ec2.deleteNetworkACL awsConfig="myAwsConfig" aclId="acl-13972276"/>
	</target>
</project>